{"version":3,"sources":["config/config.js","views/Editor/actions.js","views/Editor/reducer.js","views/Reader/actions.js","views/Reader/reducer.js","components/Audio/actions.js","components/Audio/reducer.js","components/Menu/actions.js","components/Menu/reducer.js","components/Dictionary/actions.js","components/Dictionary/reducer.js","configureStore.js","components/Menu/index.js","App.js","serviceWorker.js","views/Home/index.js","components/Audio/index.js","views/Editor/index.js","components/Dictionary/index.js","views/Reader/index.js","index.js"],"names":["siteurl","GLOBAL","OFFINE","API_LOGIN_URL","API_POST_URL","apiurl","API_AUDIO_URL","API_MENU_URL","API_DICTIONARY_URL","isAdmin","fetch","method","then","result","json","token","catch","error","alert","receive_post","post","type","getPosts","state","items","combineReducers","action","_","unionBy","isArray","fetchPost","params","dispatch","config","postId","headers","response","receive_references","references","getReferences","isFetching","status","receive_audio","list","fetchAudioList","Authorization","setted_audio","reference","getAudioList","getReference","isSettingReference","isSetting","receive_category","posts","receive_meaning","meaning","receive_traduction","traduction","getMeaning","getTraduction","fetchingMeaning","isFetchingMeaning","fetchingTraduction","isFetchingTraduction","rootPersistConfig","key","storage","blacklist","debug","rootReducer","persistCombineReducers","persistReducer","OFFLINE","reader","audio","category","dictionary","history","createBrowserHistory","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","undefined","applyMiddleware","thunk","routerMiddleware","persistStore","Navigation","props","parentWidth","expanded","activeKey","handleExpandSide","bind","handleSelect","this","setState","ReactDOM","findDOMNode","parentNode","clientWidth","that","debouncedHandleResize","fn","ms","timer","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","categorySlug","fetchCategory","String","viewPorts","sm","Sidenav","appearance","className","defaultOpenKeys","onSelect","Body","Navbar","Nav","Item","onClick","eventKey","style","height","icon","Icon","size","componentClass","to","Dropdown","title","href","Divider","Header","DropdownCategory","React","Component","isEmpty","descriptionList","forEach","find","tags","tag","name","cap","split","engPost","itaPost","lang","p","getPost","subCategoryName","sub_category","push","display","ID","post_title","chapter","description","parts","partName","Menu","reverse","divider","connect","Object","assign","xs","md","lg","App","loading","delay","Container","FlexboxGrid","justify","Col","xl","Content","children","Footer","defaultProps","withRouter","Boolean","location","hostname","match","Home","Panel","textAlign","borderRadius","src","alt","dangerouslySetInnerHTML","__html","List","header","id","AudioList","currentPlay","currentPlayIndex","firstIndex","lastActionTime","Date","now","prevAction","selectAudio","prevProps","prevState","Number","keys","getAudioId","console","log","index","length","document","getElementById","play","isPlaylistEnded","previousPlay","item","getIdFromFilename","refresh","audioList","selected","componentList","prevTrack","nextTrack","Notification","showAlsoUnassigned","filter","post_parent","playingNameId","isPlaying","form","FormData","append","body","setOrUpdateAudio","isUndefined","map","fileNameId","hide","active","handleClick","Audio","controls","source","Selectors","data","counter","subCounter","classes","Editor","audioSelected","canAttach","allAudio","actionList","oldSelected","handleSelectAudio","componentDidMount","trigger","pop","e","currentTarget","isNil","content","rendered","replace","Button","color","flexDirection","Toggle","onChange","selectionChanged","insertNextNplay","Dictionary","close","show","word","fetchMeaning","fetchTraduction","Drawer","onHide","Title","Loader","DefinitionList","def","AudioWord","uk","us","hover","ele","i","width","lastcall","Reader","postIta","postEng","selectedReference","selectedPiece","wordSelected","showTraduction","playOnClick","playAll","playIndex","hideTraduction","fetchData","fetchReferences","scroll","top","left","behavior","referencesInserted","getSelectionId","classList","add","textAligned","itaP","querySelectorAll","val","position","offsetTop","referencesList","sortBy","tooEarly","insertReferencesIntoText","alignText","current","remove","contains","updateSelection","onlyWord","innerHTML","onEnd","ref","selectionId","Howl","autoplay","preload","on","stopPlay","handleEnd","findIndex","itaContent","ButtonToolbar","alignItems","IconButton","disabled","checkedChildren","unCheckedChildren","checked","vertical","fetching","render","StrictMode","exact","path","component","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e6fc39d0.chunk.js","sourcesContent":["import 'whatwg-fetch';\n\n//const siteurl = 'http://wptest.me'\nconst siteurl = 'http://treasureisland.local'\n\nlet apiurl = siteurl + '/wp-json/wp/v2/';\nlet login = siteurl + '/wp-json/jwt-auth/v1/token';\nvar GLOBAL = {\n\tOFFINE: false,\n\tAPI_LOGIN_URL: login,\n\tAPI_POST_URL: apiurl + 'posts',\n  API_AUDIO_URL: siteurl + '/wp-json/audio/',\n  API_MENU_URL: siteurl  + '/wp-json/menu/',\n  API_DICTIONARY_URL: siteurl + '/wp-json/dictionary/',\n\tisAdmin:false\n}\n\nfetch(`${GLOBAL.API_LOGIN_URL}?username=demo&password=demo`,\n  {\n    method: 'POST'\n  })\n  .then( result => result.json() )\n  .then( json => GLOBAL.token = json.token )\n  .catch( error => alert('Login error'))\n\nexport default GLOBAL","import 'whatwg-fetch';\nimport config from '../../config/config'\n\nexport const REQUEST_POST = 'REQUEST_POST';\nexport const RECEIVE_POST = 'RECEIVE_POST';\n\nconst request_post = () => {\n  return {\n    type: REQUEST_POST\n  }\n}\n\nconst receive_post = (post) => {\n  return {\n    type: RECEIVE_POST,\n    post\n  }\n}\n\nexport const fetchPost = (params = {}) => (dispatch) => {\n  dispatch(request_post())\n\n  return fetch(config.API_POST_URL + '/' + (params.postId || ''), {\n    headers: {'Authorization': 'Bearer '+ config.token }\n  })\n    .then( response => response.json() )\n    .then( json => dispatch(receive_post(json)) )\n    .catch( (error) => dispatch(receive_post([])) )\n}","import { combineReducers } from 'redux';\nimport { REQUEST_POST, RECEIVE_POST } from './actions'\nimport _ from 'lodash'\n\nconst items = (state = [], action) => {\n  switch(action.type) {\n    case REQUEST_POST:\n      return state;\n    case RECEIVE_POST:\n      return _.unionBy( _.isArray(action.post) ? action.post : [action.post], state, 'id') // rimuove doppioni\n    default:\n      return state;\n  }\n}\n\nexport const getPosts = state => state.items \n\nexport default combineReducers({\n  items\n})","import 'whatwg-fetch';\nimport config from '../../config/config'\n\nexport const REQUEST_POST = 'REQUEST_POST';\nexport const RECEIVE_POST = 'RECEIVE_POST';\n\nconst request_post = () => {\n  return {\n    type: REQUEST_POST\n  }\n}\n\nconst receive_post = (post) => {\n  return {\n    type: RECEIVE_POST,\n    post\n  }\n}\n\nexport const fetchPost = (params = {}) => (dispatch) => {\n  dispatch(request_post())\n\n  return fetch(config.API_POST_URL + '/' + (params.postId || ''), {\n    headers: {'Authorization': 'Bearer '+ config.token }\n  })\n    .then( response => response.json() )\n    .then( json => dispatch(receive_post(json)) )\n    .catch( (error) => dispatch(receive_post([])) )\n}\n\nexport const REQUEST_REFERENCES = 'REQUEST_REFERENCES';\nexport const RECEIVE_REFERENCES = 'RECEIVE_REFERENCES';\n\nconst request_references = () => {\n  return {\n    type: REQUEST_REFERENCES\n  }\n}\n\nconst receive_references = (references) => {\n  return {\n    type: RECEIVE_REFERENCES,\n    references\n  }\n}\n\nexport const fetchReferences = (params = {}) => (dispatch) => {\n  dispatch(request_references())\n\n  return fetch(config.API_AUDIO_URL + 'references?post_id=' + (params.postId || ''), {\n    headers: {'Authorization': 'Bearer '+ config.token }\n  })\n    .then( response => response.json() )\n    .then( json => dispatch(receive_references(json)) )\n    .catch( (error) => dispatch(receive_references([])) )\n}","import { combineReducers } from 'redux';\nimport { \n  REQUEST_POST, RECEIVE_POST,\n  REQUEST_REFERENCES, RECEIVE_REFERENCES\n} from './actions'\nimport _ from 'lodash'\n\nconst items = (state = [], action) => {\n  switch(action.type) {\n    case REQUEST_POST:\n      return state;\n    case RECEIVE_POST:\n      return _.unionBy( _.isArray(action.post) ? action.post : [action.post], state, 'id') // rimuove doppioni\n    default:\n      return state;\n  }\n}\n\nconst references = (state = [], action) => {\n  switch(action.type) {\n    case REQUEST_REFERENCES:\n      return state;\n    case RECEIVE_REFERENCES:\n      return action.references\n    default:\n      return state;\n  }\n}\n\nconst status = (state = 0, action) => {\n  switch(action.type) {\n    case RECEIVE_REFERENCES:\n    case RECEIVE_POST:\n      return state-1;\n    case REQUEST_REFERENCES:\n    case REQUEST_POST:\n      return state+1;\n    default: \n      return state;\n  }\n}\n\nexport const getPosts = state => state.items \nexport const getReferences = state => state.references\nexport const isFetching = state => state.status > 0\n\nexport default combineReducers({\n  items,\n  references,\n  status\n})","import 'whatwg-fetch';\nimport config from '../../config/config';\nimport _ from 'lodash';\n\nexport const REQUEST_AUDIO = 'REQUEST_AUDIO';\nexport const RECEIVE_AUDIO = 'RECEIVE_AUDIO';\nexport const SET_AUDIO = 'SET_AUDIO';\nexport const SETTED_AUDIO = 'SETTED_AUDIO';\nexport const AUDIO_RESET = 'AUDIO_RESET';\n\nconst request_audio = () => {\n  return {\n    type: REQUEST_AUDIO\n  }\n}\n\nconst receive_audio = (list) => {\n  return {\n    type: RECEIVE_AUDIO,\n    list\n  }\n}\n\nexport const fetchAudioList = (params = {}) => (dispatch) => {\n  dispatch(request_audio())\n\n  //const showAlsoUnassigned = _.isUndefined(params.showAlsoUnassigned) ? '' : '&showAlsoUnassigned';\n  fetch(\n    config.API_AUDIO_URL + 'list?post_parent=' + params.postId + 'showAlsoUnassigned',\n    {\n      headers: {\n        Authorization: 'Bearer ' + config.token\n      }\n    }\n  )\n    .then( response => response.json())\n    .then( json => dispatch(receive_audio( json )))\n    .catch( error => dispatch(receive_audio([])))\n}\n\nconst set_audio = () => {\n  return {\n    type: SET_AUDIO\n  }\n}\n\nconst setted_audio = (result) => {\n  return {\n    type: SETTED_AUDIO,\n    reference: result.reference\n  }\n}\n\nexport const setOrUpdateAudio = (params = {}) => dispatch => {\n  dispatch(set_audio());\n\n  const form = new FormData();\n  form.append('post_id', params.id);\n  form.append('reference', params.reference);\n  form.append('post_parent', params.post_parent); // assign attachment to post ( eng )\n  fetch(\n    config.API_AUDIO_URL + 'set',\n    {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + config.token\n      },\n      body: form\n    }\n  )\n    .then( response => response.json() )\n    .then( json => dispatch(setted_audio(json)))\n    .catch( error => dispatch(setted_audio({})))\n}","import { \n  REQUEST_AUDIO, RECEIVE_AUDIO,\n  SET_AUDIO, SETTED_AUDIO,\n  AUDIO_RESET\n} from './actions';\nimport { combineReducers } from 'redux';\nimport _ from 'lodash';\n\nconst items = (state = [], action) => {\n  switch(action.type) {\n    case AUDIO_RESET:\n      return [];\n    case REQUEST_AUDIO:\n      return state;\n    case RECEIVE_AUDIO:\n      return _.unionBy(action.list, state, 'id') // evita doppioni\n    default:\n      return state;\n  }\n}\n\nconst reference = (state = [], action) => {\n  switch(action.type) {\n    case SET_AUDIO:\n      return state;\n    case SETTED_AUDIO:\n      return action.reference\n    default:\n      return state;\n  }\n}\n\nconst isSetting = (state = 0, action) => {\n  switch(action.type) {\n    case SET_AUDIO:\n      return state+1;\n    case SETTED_AUDIO:\n      return state-1;\n    default:\n      return state;\n  }\n}\n\nexport const getAudioList = (state) => state.items;\nexport const getReference = (state) => state.reference;\nexport const isSettingReference = (state) => state.isSetting;\n\nexport default combineReducers({\n  items,\n  reference,\n  isSetting\n})","import 'whatwg-fetch';\nimport config from '../../config/config';\n\nexport const REQUEST_CATEGORY = 'REQUEST_CATEGORY';\nexport const RECEIVE_CATEGORY = 'RECEIVE_CATEGORY';\n\nconst receive_category = (posts) => {\n  return {\n    type:RECEIVE_CATEGORY,\n    posts\n  }\n}\nexport const fetchCategory = (params={}) => (dispatch) => {\n  dispatch({type: REQUEST_CATEGORY})\n\n  return fetch(config.API_MENU_URL + 'category?category_slug=' + params.categorySlug)\n    .then( response => response.json() )\n    .then( json => dispatch(receive_category(json)))\n    .catch( error => receive_category([]))\n}","import { combineReducers } from 'redux';\nimport { REQUEST_CATEGORY, RECEIVE_CATEGORY } from './actions';\n\nconst posts = (state=[], action) => {\n  switch(action.type) {\n    case RECEIVE_CATEGORY:\n      return action.posts;\n    case REQUEST_CATEGORY:\n    default:\n      return state;\n  }\n}\n\nexport const getCategoryPosts = (category) => category.posts\n\nexport default combineReducers({\n  posts,\n})","import 'whatwg-fetch';\nimport config from '../../config/config';\n\nexport const REQUEST_MEANING = 'REQUEST_MEANING';\nexport const RECEIVE_MEANING = 'RECEIVE_MEANING';\n\nconst receive_meaning = (meaning) => {\n  return {\n    type: RECEIVE_MEANING,\n    meaning\n  }\n}\n\nexport const fetchMeaning = (params = {}) => dispatch => {\n\n  dispatch({type:REQUEST_MEANING});\n\n  fetch(\n    config.API_DICTIONARY_URL + 'meaning?word=' + params.word || '',\n    {\n      header: { 'Autorization': 'Bearer ' + config.token }      \n    }\n  )\n    .then( result => result.json() )\n    .then( json => dispatch(receive_meaning(json)))\n    .catch( error => dispatch(receive_meaning({})))\n}\n\nexport const REQUEST_TRADUCTION = 'REQUEST_TRADUCTION';\nexport const RECEIVE_TRADUCTION = 'RECEIVE_TRADUCTION';\n\nconst receive_traduction = (traduction) => {\n  return {\n    type:RECEIVE_TRADUCTION,\n    traduction\n  }\n}\n\nexport const fetchTraduction = (params={}) => (dispatch) => {\n  dispatch({type:REQUEST_TRADUCTION})\n\n  fetch(\n    config.API_DICTIONARY_URL + 'traduction?word=' + params.word || '',\n    {\n      header: { 'Autorization': 'Bearer ' + config.token }      \n    }\n  )\n    .then( result => result.json() )\n    .then( json => dispatch(receive_traduction(json)))\n    .catch( error => dispatch(receive_traduction({})))\n}","import { combineReducers } from 'redux';\nimport {\n  REQUEST_MEANING, RECEIVE_MEANING,\n  REQUEST_TRADUCTION, RECEIVE_TRADUCTION\n}\nfrom './actions';\nimport _ from 'lodash';\n\nconst meaning = (state={}, action) => {\n  switch(action.type) {\n    case RECEIVE_MEANING:\n      return action.meaning;\n    case REQUEST_MEANING:\n    default: return state;\n  }\n}\n\nconst traduction = (state={}, action) => {\n  switch(action.type) {\n    case RECEIVE_TRADUCTION:\n      return action.traduction;\n    case REQUEST_TRADUCTION:\n    default: return state;\n  }\n}\n\nconst isFetchingMeaning = (state=0, action) => {\n  switch(action.type) {\n    case REQUEST_MEANING:\n      return state+1;\n    case RECEIVE_MEANING:\n      return state-1;\n    default: return state;\n  }\n}\n\nconst isFetchingTraduction = (state=0, action) => {\n  switch(action.type) {\n    case REQUEST_TRADUCTION:\n      return state+1;\n    case RECEIVE_TRADUCTION:\n      return state-1;\n    default: return state;\n  }\n}\n\nexport const getMeaning = (state) => state.meaning;\nexport const getTraduction = (state) => state.traduction;\nexport const fetchingMeaning = (state) => state.isFetchingMeaning;\nexport const fetchingTraduction = (state) => state.isFetchingTraduction;\n\nexport default combineReducers({\n  meaning,\n  traduction,\n  isFetchingMeaning,\n  isFetchingTraduction\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistCombineReducers, persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport { reducer as toastr } from 'react-redux-toastr';\nimport thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from 'react-router-redux';\n\nimport config from './config/config';\nimport posts from './views/Editor/reducer';\nimport reader from './views/Reader/reducer';\nimport audio from './components/Audio/reducer';\nimport category from './components/Menu/reducer';\nimport dictionary from './components/Dictionary/reducer';\n\n/*\nimport reviews from './components/Reviews/reducer';\nimport search from './views/Search/reducer';\nimport navbar from './components/NavBar/reducer';\n*/\nconst rootPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [/*\n    'navbar',\n    'search',\n    'toastr',\n    'reviews',\n    */\n    'posts',\n    'audio',\n    'reader',\n    'category',\n    'dictionary'\n  ],\n  debug: true\n};\n\n\nconst rootReducer = persistCombineReducers(rootPersistConfig, {\n  posts: persistReducer(\n    {\n      key: 'posts',\n      storage,\n      blacklist: config.OFFLINE ? ['isFetching', 'hasMore'] : ['isFetching', 'hasMore', 'items'],\n    },\n    posts,\n  ),\n  reader: persistReducer(\n    {\n      key: 'reader',\n      storage,\n      blacklist: config.OFFLINE ? ['isFetching', 'hasMore'] : ['isFetching', 'hasMore', 'items'],\n    },\n    reader,\n  ),\n  audio: persistReducer(\n    {\n      key: 'audio',\n      storage,\n      blacklist: config.OFFLINE ? ['isFetching', 'hasMore'] : ['isSetting'],\n    },\n    audio,\n  ),\n  category: persistReducer(\n    {\n      key: 'category',\n      storage,\n      blacklist: config.OFFLINE ? ['isFetching', 'hasMore'] : ['isSetting'],\n    },\n    category,\n  ),\n  dictionary: persistReducer(\n    {\n      key: 'dictionary',\n      storage,\n      blacklist: config.OFFLINE ? ['isFetching', 'hasMore'] : ['isSetting'],\n    },\n    dictionary,\n  ), \n});\n\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  undefined,\n  applyMiddleware(thunk, routerMiddleware(history)),\n);\n\npersistStore(store);\n\nexport { history };\nexport default store;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Nav, Navbar, Icon, Dropdown, Sidenav, Divider } from 'rsuite';\n//import  DropdownCategories from './DropdownCategories';\nimport { connect } from 'react-redux';\nimport { bindActionsCreator } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { fetchCategory } from './actions';\nimport { getCategoryPosts } from './reducer';\nimport config from '../../config/config';\nimport _ from 'lodash';\n\nimport './style.css'\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { parentWidth: 2000, expanded: false, activeKey: null }\n\n    this.handleExpandSide = this.handleExpandSide.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ parentWidth: ReactDOM.findDOMNode(this).parentNode.clientWidth })\n\n    var that = this\n    const debouncedHandleResize = debounce(function handleResize() {\n      that.setState({ 'parentWidth': ReactDOM.findDOMNode(that).parentNode.clientWidth })\n    }, 300)\n\n    window.addEventListener('resize', debouncedHandleResize)\n\n    const { dispatch } = this.props\n    fetchCategory({categorySlug:'treasure-island'})(dispatch)\n\n  }\n\n  handleExpandSide(){\n    this.setState({expanded: !this.state.expanded})\n  }\n  handleSelect(activeKey){\n    this.setState({activeKey: String(activeKey)})\n  }\n\n  render() {\n\n    const { posts } = this.props;\n    const { expanded } = this.state;\n\n    if (this.state.parentWidth < window.viewPorts.sm) {\n      return (\n        <Sidenav\n          appearance='inverse'\n          expanded={expanded} \n          className={ expanded ? ''  : 'sidenav-compact' }\n          defaultOpenKeys={[]}\n          activeKey={this.state.activeKey}\n          onSelect={this.handleSelect}\n        >\n          <Sidenav.Body>\n            <Navbar.Body>\n              <Nav onSelect={this.props.onSelect} activeKey={this.props.activeKey}>\n                <Nav.Item onClick={this.handleExpandSide}\n                  eventKey=\"1\" \n                  style={{height: 56}}\n                  icon={<Icon icon=\"bars\" size='lg' />}\n                  componentClass='span'>\n                  <Link to={'/'}></Link>\n                </Nav.Item>\n                <Dropdown title=\"Altro\" eventKey='a'>\n                  <Dropdown.Item eventKey=\"4\">\n                    <a href='/company/'>Company</a>\n                  </Dropdown.Item>\n                  <Dropdown.Item eventKey=\"5\"><Link to={'/'}>Team</Link></Dropdown.Item>\n                  <Dropdown.Item eventKey=\"6\"><Link to={'/'}>Contact</Link></Dropdown.Item>\n                </Dropdown>\n                <Divider/>\n              </Nav>\n            </Navbar.Body>\n          </Sidenav.Body>\n        </Sidenav>\n      )\n    }\n    else\n      return (\n        <Navbar {...this.props} className='main-nav'>\n          <Navbar.Header>\n            <a href=\"/\" className=\"navbar-brand logo\">\n              <Icon icon='anchor'/>\n            </a>\n          </Navbar.Header>\n          <Navbar.Body>\n            <Nav onSelect={this.props.onSelect} activeKey={this.props.activeKey}>\n              <Nav.Item \n                eventKey=\"1\"\n                componentClass='span' icon={<Icon icon=\"home\" />}>\n                <Link to={'/'}>Home</Link>\n              </Nav.Item>\n\n              {DropdownCategory('Treasure Island', posts, config.isAdmin)}\n              \n              {/*\n              <Dropdown title=\"Altro\">\n                <Dropdown.Item eventKey=\"4\">\n                  <a href='/company/'>Company</a>\n                </Dropdown.Item>\n                <Dropdown.Item eventKey=\"5\">Team</Dropdown.Item>\n                <Dropdown.Item eventKey=\"6\">Contact</Dropdown.Item>\n              </Dropdown>\n            */}\n            </Nav>\n          </Navbar.Body>\n        </Navbar>\n      );\n  }\n\n};\n\nfunction getPost(posts, cap, lang) {\n  let p = null;\n  _.forEach(posts, post => {\n    if( \n      _.find(post.tags, tag => tag.name === lang) && \n      _.find(post.tags, tag => tag.name === cap)) {\n      p = post;\n    }\n  })\n  return p;\n}\n\nconst DropdownCategory = (title, posts, isAdmin) => {\n\n  if(_.isEmpty(posts)) return null;\n\n  let list = [];\n  let descriptionList = []\n  _.forEach(posts, (post, key) => {\n    if( _.find(post.tags, tag => tag.name === 'eng') ) {\n      const cap = _.find(post.tags, tag => tag.name.split('-')[0] === 'chapter' )\n      const engPost = post;\n      const itaPost = getPost(posts, cap.name, 'ita');\n      //list[cap.name] = {'eng': engPost, 'ita': itaPost }\n      const subCategoryName = post.sub_category.name;\n      if(list[subCategoryName] === undefined) {\n        list[subCategoryName] = [];\n        descriptionList[subCategoryName] = []\n      }\n      list[subCategoryName].push(\n        <Dropdown.Item key={key}>\n          <div style={{display:'flex'}}>\n            <Link to={\"/reader/\"+engPost.ID+'/'+itaPost.ID}>\n              {engPost.post_title.split(' ')[1]} - {engPost.chapter}\n            </Link>\n            { isAdmin ? <Link to={\"/editor/\"+engPost.ID}>EDIT</Link> : null }\n            <Divider />\n          </div>\n        </Dropdown.Item>\n      )\n      descriptionList[subCategoryName] = post.sub_category.description;\n    }\n\n  })  \n  let parts = [];\n  for(let partName in list) {\n    parts.push(\n      <Dropdown.Menu key={partName} title={partName + ' - '  + descriptionList[partName]}>\n        {_.reverse(list[partName])}\n      </Dropdown.Menu>\n    )\n    parts.push(<Dropdown.Item divider/>)\n  }\n  _.reverse(parts);\n  return (\n    <Dropdown title={title}>\n      {parts}\n    </Dropdown>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { posts: state.category.posts }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return Object.assign({ dispatch })\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n\n\nfunction debounce(fn, ms) {\n  let timer\n  return _ => {\n    clearTimeout(timer)\n    timer = setTimeout(_ => {\n      timer = null\n      fn.apply(this, arguments)\n    }, ms)\n  };\n}\n","import './App.css';\nimport './main.style'\n\nimport { Button, Container, Header, Content, Footer, FlexboxGrid, Col } from 'rsuite';\nimport Menu from './components/Menu'\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport config  from './config/config';\nimport _ from 'lodash';\n\n//import { isMenuVisible } from './components/NavBar/reducer';\n//import { closeMenu } from './components/NavBar/actions';\n//import NavBar from './components/NavBar';\n//import SideMenu from './views/SideMenu';\n\n\n\nwindow.viewPorts = {\n  xs: 0, \n  sm: 480, // <=\n  md: 960, // <=\n  lg: 1200 // <=\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.state = {\n      activeKey: null,\n      loading: false,\n    };\n  }\n  handleSelect(eventKey) {\n    this.setState({\n      activeKey: eventKey\n    });\n  }\n  render() {\n    const { activeKey } = this.state;\n\n    // Wait for a login with demo account\n    if(config.token === undefined) {\n      _.delay((state) => this.setState(state), 1000, {loading:!this.state.loading})\n      return <div>Loading... {this.state.loading}</div>\n    }\n\n    return (\n      <Container className=\"App\">\n        <div className='view-port'>\n          <Header className='header-container'>\n            <Menu appearance='inverse' onSelect={this.handleSelect} activeKey={activeKey}/>\n          </Header>\n          <FlexboxGrid justify='center'>\n            <FlexboxGrid.Item componentClass={Col} xs={24} sm={24} lg={20} xl={15} className='main-container'>\n              <Content>{this.props.children}</Content>\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n        </div>\n        <Footer className='footer-container'>Treasure Island by Robert Louis Stevenson</Footer>\n      </Container>\n    );\n  }\n}\n\n\n/*\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.hideSidebar = this.hideSidebar.bind(this);\n  }\n\n  hideSidebar() {\n    if (this.props.sideMenuVisible) {\n      this.props.closeMenu();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop\n          preventDuplicates\n          position=\"top-center\"\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n        />\n        <Sidebar.Pushable>\n          <SideMenu isVisible={this.props.sideMenuVisible} closeMenu={this.props.closeMenu} />\n          <Sidebar.Pusher dimmed={this.props.sideMenuVisible} onClick={this.hideSidebar}>\n            <NavBar />\n            {this.props.children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </div>\n    );\n  }\n}\n*/\nApp.propTypes = {\n  sideMenuVisible: PropTypes.bool.isRequired,\n  closeMenu: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nApp.defaultProps = {\n  children: null,\n};\n\nconst mapStateToProps = state => ({\n  //sideMenuVisible: isMenuVisible(state.navbar),\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { /*closeMenu*/ },\n  )(App),\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Panel, Divider, List, FlexboxGrid, Col } from 'rsuite';\nimport config from '../../config/config';\nimport _ from 'lodash';\nimport './style.css';\n\nclass Home extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = { posts: null }\n  }\n\n  render()\n  {\n    const { posts } = this.props;\n\n    return(\n      <FlexboxGrid>\n        <FlexboxGrid.Item componentClass={Col} lg={4} xl={5}/>\n        <FlexboxGrid.Item componentClass={Col} lg={16} xl={14}>\n          <Panel>\n            <div style={{textAlign:'center'}}>\n              <h1>Treasure Island</h1>\n              <h3>Martin Louis Stevenson</h3>\n              <figure>\n                <img\n                  style={{height:'500px', borderRadius:'5px'}}\n                  src='https://images.unsplash.com/photo-1564845654222-d437f029c5c4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80'\n                  alt='Alfonso Reyes - boat'\n                />\n                <figcaption>Image from unsplash by Alonso Reyes</figcaption>\n              </figure>\n              <hr/>\n              <p>Audio-libro bilingue Inglese-Italiano con supporto dizionario (Oxford)</p>\n              <p>Letto da: Mark F. Smith, audio completo su <a href='https://www.youtube.com/watch?v=PuiDkBO_SAY'>Youtube</a></p>\n              <p>Traduzione da: <a href='https://libri.freenfo.net/3/3044030.html'>libri.freenfo.net</a></p>\n              <p>Dev by: Alessio Guerriero</p>\n            </div>\n            <hr/>\n            <h3>Utilizzo</h3>\n              <div\n                dangerouslySetInnerHTML={\n                  {__html:'<iframe width=\"100%\" height=\"600px\" src=\"https://www.youtube.com/embed/UwHFogMirgU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>'}}\n              />\n            <hr/>\n            <h3>Contents</h3>\n            {DropdownCategory('Treasure Island', posts, config.isAdmin)}\n          </Panel>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { posts: state.category.posts }\n}\n\nexport default connect(mapStateToProps, null)(Home);\n\n\nconst DropdownCategory = (title, posts, isAdmin) => {\n\n  if(_.isEmpty(posts)) return null;\n\n  let list = [];\n  let descriptionList = []\n  _.forEach(posts, (post, key) => {\n    if( _.find(post.tags, tag => tag.name === 'eng') ) {\n      const cap = _.find(post.tags, tag => tag.name.split('-')[0] === 'chapter' )\n      const engPost = post;\n      const itaPost = getPost(posts, cap.name, 'ita');\n      //list[cap.name] = {'eng': engPost, 'ita': itaPost }\n      const subCategoryName = post.sub_category.name;\n      if(list[subCategoryName] === undefined) {\n        list[subCategoryName] = [];\n        descriptionList[subCategoryName] = []\n      }\n      list[subCategoryName].push(\n        <List.Item key={key}>\n          <div style={{display:'flex'}}>\n            <Link to={\"/reader/\"+engPost.ID+'/'+itaPost.ID}>\n              {engPost.post_title} - {engPost.chapter} \n            </Link>\n            { isAdmin ? <Link to={\"/editor/\"+engPost.ID}>EDIT</Link> : null }\n          </div>\n        </List.Item>\n      )\n      descriptionList[subCategoryName] = post.sub_category.description;\n    }\n\n  })\n\n  let parts = [];\n  for(let partName in list) {\n    parts.push(\n      <Panel header={partName + ' - ' + descriptionList[partName]}>\n        <List key={partName}>\n          {_.reverse(list[partName])}\n        </List>\n      </Panel>\n    )\n  }\n  return (\n    <div id='contents'>\n      {_.reverse(parts)}\n    </div>\n  )\n}\n\nfunction getPost(posts, cap, lang) {\n  let p = null;\n  _.forEach(posts, post => {\n    if( \n      _.find(post.tags, tag => tag.name === lang) && \n      _.find(post.tags, tag => tag.name === cap)) {\n      p = post;\n    }\n  })\n  return p;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAudioList, setOrUpdateAudio, AUDIO_RESET } from './actions';\nimport { getAudioList, getReference, isSettingReference } from './reducer';\nimport { Panel, Notification } from 'rsuite';\nimport _ from 'lodash';\nimport './style.css';\n\nclass AudioList extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.list = []\n    this.currentPlay = ''\n    this.currentPlayIndex = this.firstIndex = 0\n    this.lastActionTime = Date.now();\n    this.prevAction = '';\n    this.reference = '';\n    this.selectAudio = this.selectAudio.bind(this);\n  }\n\n  componentDidMount(){\n    const { dispatch, postId } = this.props;\n    fetchAudioList({postId})(dispatch);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    if(!_.isEmpty(this.list)) {\n      if(_.isEmpty(this.currentPlay)) {\n        // first run\n        this.currentPlayIndex = this.firstIndex = Number(Object.keys(this.list)[0])\n        this.currentPlay = this.getAudioId(this.currentPlayIndex)\n      }\n    }\n    const { reference, isSettingReference } = this.props\n    if( !isSettingReference ) {\n\n      if( this.reference !== '' ) {\n        if( reference === this.reference ) {\n          console.log('Update reference ok ' + reference)\n        }\n        else {\n          console.log('error update reference: ' + this.reference + ' - ' + reference)\n        }\n        this.reference = '';\n      }\n    }\n  }\n\n  getAudioId(index){\n    return 'audio-'+this.list[index].id\n  }\n  isPlaying(id){\n    return 'audio-'+id === this.currentPlay;\n  }\n  isPlaylistEnded(){\n    return this.list.length === this.currentPlayIndex+1\n  }\n\n  play(){\n    if(!_.isEmpty(this.currentPlay)) {\n      document.getElementById(this.currentPlay).play()  \n    }\n    else{\n      alert('Playlist vuota!');\n    }\n  }\n\n  getIdFromFilename(name){\n    return Number(name.split('-')[1].split('.')[0]);\n  }\n\n  nextTrack(){\n    if(!this.isPlaylistEnded()) {\n      this.previousPlay = this.currentPlay;\n      this.currentPlay = this.getAudioId(++this.currentPlayIndex);\n    }\n    else {\n      alert('Playlist ended!')\n    }    \n  }\n\n  prevTrack(){\n    if( this.currentPlayIndex === this.firstIndex ) return\n    this.currentPlay = this.getAudioId(--this.currentPlayIndex);\n    //this.previousPlay = this.getAudioId(this.currentPlayIndex>this.firstIndex ? this.currentPlayIndex-1 : this.firstIndex)\n  }\n\n  selectAudio(item){\n    const id = this.getIdFromFilename(item.name)\n    this.currentPlayIndex = id;\n    this.currentPlay = this.getAudioId(id);\n    this.setState({refresh:''})\n    this.props.handleSelect(item.reference)\n  }\n\n  render(){\n    const { audioList, postId, selected, dispatch, isSettingReference } = this.props;\n    let action = this.props.action;\n\n    let componentList = null;\n    if(!_.isEmpty(audioList)) {\n\n      if((Date.now() - this.lastActionTime ) > 200 && // ms\n        this.prevAction !== this.props.action) {\n\n        console.log('action: ' + this.props.action + ' ---- pre:' + this.prevAction)\n        this.prevAction = this.props.action;\n        this.lastActionTime = Date.now();\n        switch(this.props.action) {\n          case 'play':\n            this.play();\n            break;\n          case 'prev':\n            this.prevTrack();\n            break;\n          case 'next':\n            this.nextTrack();\n            break;\n          case 'refresh-audio-list':\n            Notification['info']({title:'refresh audio list'})\n            const { dispatch, postId, showAlsoUnassigned } = this.props;\n            dispatch({type: AUDIO_RESET})\n            fetchAudioList({postId})(dispatch);\n            break;\n        }\n      } \n\n      const list = _.filter(audioList, audio => audio.post_parent == postId || audio.post_parent == 0 )\n\n      let playingNameId = 0;\n      _.forEach( list, (item) => { \n        // use the id in the filename for correct asc order\n        const index = this.getIdFromFilename(item.name);\n\n        if(this.isPlaying(item.id) ) {\n          playingNameId = index\n        } \n\n        if(action === 'insert' && this.isPlaying(item.id) ) {\n          this.reference = `${postId}-${selected}`\n          item = _.assign(item, { reference: this.reference })\n          this.list[index] = item;\n\n          if( !isSettingReference ){\n            setOrUpdateAudio({\n              id: item.id,\n              reference: this.reference,\n              post_parent: postId\n            })(dispatch)\n            action = '';\n          }\n        }\n        else {\n          if( _.isUndefined(this.list[index]) ) {\n            this.list[index] = item;\n          }\n        }\n      })\n\n      componentList = this.list.map(item => {\n        let fileNameId = this.getIdFromFilename(item.name);\n        return <Audio \n          item={item}\n          hide={ ( fileNameId < playingNameId-5 ) ? true : false }\n          active={this.isPlaying(item.id)}\n          handleClick={this.selectAudio}\n        />\n        }\n      )\n    }\n    return (<Panel className='right-panel'>{componentList || null}</Panel>);\n  }\n}\n\nclass Audio extends React.Component {\n\n  render(){\n    const { item, active, hide } = this.props;\n    return (\n      <div \n        key={item.id}\n        id={item.id}\n        className={\n          'audio-container ' + \n          ( active ? 'selected ' : '') +\n          ( hide ? 'hidden' : '')\n        }\n        onClick={ () => {this.props.handleClick(item)} }\n      >\n        {item.name.split('.')[0]}\n        { !_.isEmpty(item.reference) ? (' - ' + item.reference ) : '' }\n        <audio controls id={'audio-'+item.id}>\n          <source src={item.source} type=\"audio/mpeg\"></source>\n        </audio>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    audioList: getAudioList(state.audio),\n    reference: getReference(state.audio),\n    isSettingReference: isSettingReference(state.audio)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return Object.assign({}, {dispatch});\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPost } from './actions';\nimport { getPosts } from './reducer';\nimport { Panel, FlexboxGrid, Col, Button, Sidenav, Notification, Toggle } from 'rsuite';\nimport _ from 'lodash';\nimport AudioList from '../../components/Audio';\n//import $ from 'jquery';\n\nimport './style.css';\n\nclass Selectors extends React.Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const { selected, data, counter } = this.props;\n    let subCounter = 0;\n    return _.map(data.split(' '), data => {\n      subCounter++;\n      let id = counter + '-' + subCounter;\n      let classes = 'piece';\n      if(id === selected){\n        classes = 'piece selected';\n      }\n      return( \n        <span \n          id={id} \n          onClick={this.props.handleSelect} \n          className={classes} \n          dangerouslySetInnerHTML={{__html: '&nbsp;'+data}}/>\n        )\n    })\n  }\n}\n\nclass Editor extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.postId = this.props.match.params.post\n\n    this.state = {\n      selected: 0,\n      audioSelected: 0,\n      action: '',\n      canAttach:false,\n      allAudio:false,\n      actionList: [],\n    }\n    this.oldSelected = this.state.selected;\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleSelectAudio = this.handleSelectAudio.bind(this);\n  }\n\n  componentDidMount(){\n    const { dispatch } = this.props\n    fetchPost({\n      postId: this.postId\n    })(dispatch)\n  }\n\n  refresh(){\n    this.componentDidMount()\n    this.trigger('refresh-audio-list')\n    this.setState({})\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    this.oldSelected = this.state.selected;\n\n    if(!_.isEmpty(this.state.actionList)) { // execute actions 'insert' - 'next' and 'play'\n      let actionList = this.state.actionList;\n      if(this.state.action !== actionList[actionList.length-1]) {\n        const action = actionList.pop();\n        _.delay(this.setState.bind(this), 100, {action: action})\n      }\n    }\n  }\n\n  handleSelect(e){\n    this.setState({selected: e.currentTarget.id});\n  }\n\n  handleSelectAudio(selected){\n    // remove post_id from selection\n    const split = selected.split('-');\n    selected = `${split[1]}-${split[2]}`\n    this.oldSelected = selected; // evita avanzamento\n    this.setState({selected, action: ''})\n  }\n\n  selectionChanged(){\n    return this.oldSelected !== this.state.selected\n  }\n\n  insertNextNplay(){\n    if(this.state.canAttach === false) {\n      Notification['info']({title: 'Abilitare inserimento'})\n      return ''\n    }\n\n    let actionList = [];\n    actionList.push('play');\n    actionList.push('next');\n    actionList.push('insert');\n    this.setState({actionList, 'action': ''}); // importante per evitare, al refresh \n                                               // che l'azione venga ripetuta\n    return '';\n  }\n\n  trigger(action){\n    this.setState({action: action})\n  }\n\n  render(){\n\n    let post = this.props.posts.find( post => post.id === Number(this.postId) )\n    const { selected, action } = this.state;\n    if(!_.isNil(post)) {\n      let content = post.content.rendered.split('<p>')\n      content = _.filter(content, data => !_.isEmpty(_.replace(data, /\\n/, '')) )\n      content = _.map( content, data => _.replace(data, '</p>', ''))\n      let counter = 0;\n      content = _.map(content, data => {\n        counter++;\n        return <p><Selectors selected={selected} counter={counter} handleSelect={this.handleSelect} data={data}/></p>\n      })\n      return (\n        <FlexboxGrid>\n          <Panel className='player-editor'>\n            <Button onClick={ () => this.trigger('play') }>Play</Button>\n            <Button onClick={ () => this.trigger('next') }>Next</Button>\n            <Button onClick={ () => this.trigger('prev') }>Prev</Button>\n            <Button onClick={ () => this.refresh() }>Reset audio</Button>\n            <Button \n              color={this.state.canAttach ? 'green' : 'red'}\n              onClick={ () => this.setState({canAttach:!this.state.canAttach}) }>\n              Inserimento - {this.state.canAttach ? 'Attivo' : 'Disattivo'}\n            </Button>\n            <div style={{display:'flex', flexDirection:'column'}}>\n              All audio files \n              <Toggle onChange={ () => { \n                this.setState({allAudio:!this.state.allAudio});\n                this.refresh();\n              }}/>\n            </div>\n          </Panel>\n          <FlexboxGrid.Item className='text-container' componentClass={Col} xs={24} sm={24} lg={20} xl={22}>\n            <Panel>\n              {content}\n            </Panel>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item className={'fixed'} componentClass={Col} xs={24} sm={24} lg={4} xl={2}>\n            <AudioList\n              postId={this.postId}\n              action={ this.selectionChanged() ? this.insertNextNplay() : action}\n              selected={this.state.selected} \n              handleSelect={this.handleSelectAudio}\n            />\n              {/*showAlsoUnassigned={true || this.state.allAudio}*/}\n          </FlexboxGrid.Item>\n        </FlexboxGrid>\n      )\n    }\n    else {\n      return <div></div>;\n    }\n  }\n\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return Object.assign({}, {dispatch})\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: getPosts(state.posts)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMeaning, fetchTraduction } from './actions';\nimport { getMeaning, getTraduction, fetchingMeaning, fetchingTraduction } from './reducer';\nimport { Notification, Drawer, Loader, List, Divider } from 'rsuite';\nimport _ from 'lodash';\n\nimport './style.css';\n\nclass Dictionary extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  close(){\n    this.props.close() // call parent hook for close drawer\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (prevProps.show === false && this.props.show && this.props.word !== '') {\n      const { word, dispatch } = this.props;\n      fetchMeaning({word})(dispatch);\n      fetchTraduction({word})(dispatch);\n    }\n  }\n\n  render(){\n\n    const { meaning, traduction } = this.props;\n\n    return (\n      <Drawer\n        show={this.props.show}\n        onHide={this.close.bind(this)}\n      >\n        <Drawer.Header>\n          <Drawer.Title><b>Word: \"{this.props.word}\"</b></Drawer.Title>\n        </Drawer.Header>\n          <Drawer.Body>\n            { this.props.fetchingMeaning \n              ? \n              <Loader size='md' content='Loading definitions and sounds'></Loader> \n              : \n              <div>\n                <Divider><b>Definitions list</b></Divider>\n                <DefinitionList def={meaning.def}/>\n                <Divider><b>Sounds</b></Divider>\n                <AudioWord lang='English' src={meaning.uk}/>\n                <AudioWord lang='United States' src={meaning.us}/>\n              </div>\n            }\n            { this.props.fetchingTraduction \n              ?\n              <Loader size='md' content='Loading Traduction'></Loader> \n              :\n              <div>\n                <Divider><b>Traduction</b></Divider>\n                <List hover id='traductions'>\n                  {_.map(traduction, (ele, i) => <List.Item>{i+1}. {ele}</List.Item>)}\n                </List>\n              </div>\n            }\n          </Drawer.Body>\n        }\n        <Drawer.Footer>\n        </Drawer.Footer>\n      </Drawer>\n    )\n\n  }\n}\n\nfunction DefinitionList(props) {\n  let list = [];\n\n  let index = 1;\n  _.forEach(props.def, (def, i) => \n    list.push(<List.Item key={i}>{(index++) + '. ' + def.replace(':','')}.</List.Item>)\n  );\n  return <List id='definitions-list' hover>{list}</List>\n}\n\nfunction AudioWord(props){\n\n  if (!_.isEmpty(props.src)) {\n    return (\n      <div>{props.lang}\n        <audio controls style={{width:'100%'}}>\n          <source src={props.src} type=\"audio/mpeg\"></source>\n        </audio>\n      </div>\n    )\n  }\n  else return null;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    meaning: getMeaning(state.dictionary),\n    fetchingMeaning: fetchingMeaning(state.dictionary),\n    fetchingTraduction: fetchingTraduction(state.dictionary),\n    traduction: getTraduction(state.dictionary),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return Object.assign({}, {dispatch});\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dictionary);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPost, fetchReferences } from './actions';\nimport { getPosts, getReferences, isFetching } from './reducer';\nimport { \n  Panel, FlexboxGrid, Col, Sidenav, Notification, Toggle, Divider,\n  ButtonToolbar, Button, IconButton, Icon\n  } from 'rsuite';\nimport _ from 'lodash';\nimport { Howl, Howler } from 'howler';\nimport Dictionary from '../../components/Dictionary';\n//import $ from 'jquery';\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport './style.css';\n\nclass Selectors extends React.Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const { data, counter } = this.props;\n    let subCounter = 0;\n    return _.map(data.split(' '), data => {\n      subCounter++;\n      let id = counter + '-' + subCounter;\n      let classes = 'piece';\n      return( \n        <span \n          key={subCounter}\n          id={id} \n          onClick={this.props.handleSelect} \n          className={classes} \n          dangerouslySetInnerHTML={{__html: '&nbsp;'+data}}/>\n        )\n    })\n  }\n}\n\nclass Reader extends React.Component {\n\n  constructor(props){\n    super(props);\n    const postIta = props.match.params.postIta;\n    const postEng = props.match.params.postEng;\n\n    this.state = {\n      selected: '',          // without post_id   'N-N'\n      selectedReference: '', // with post_id    'N-N-N'\n      selectedPiece:'',      // for word selection\n      audioSelected: 0,\n      action: '',\n      play: false,\n      isPlaying: false,\n      postEng: postEng,\n      postIta: postIta,\n      wordSelected: '',       // word for traduction\n      showTraduction: false,  // show Drawer traduction\n      playOnClick: true,      // Play selection on click if active\n\n    }\n    this.oldSelected = this.state.selected;\n    this.handleSelect = this.handleSelect.bind(this);\n    this.play = this.play.bind(this);\n    this.playAll = this.playAll.bind(this);\n    this.playIndex = 0;\n    this.hideTraduction = this.hideTraduction.bind(this);\n\n    this.fetchData()\n    //Notification['info']({title:'construct'})\n  }\n\n  fetchData(){\n    const { dispatch } = this.props;\n    const { postIta, postEng } = this.state\n    fetchPost({\n      postId: postEng\n    })(dispatch)\n    fetchPost({\n      postId: postIta\n    })(dispatch)\n\n    fetchReferences({\n      postId: postEng\n    })(dispatch)\n  }\n\n  componentDidMount(){\n    //Notification['info']({title:'mounted'})\n    _.delay(() => {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    },1000);\n  }\n\n  getSelectionId(reference){\n    let split = reference.split('-');\n    return `${split[1]}-${split[2]}`; // toglie post_id\n  }\n\n  insertReferencesIntoText(references){\n    if(_.isUndefined(this.referencesInserted)){\n      this.referencesInserted = true\n    }\n    else {\n      return\n    }\n\n    _.forEach(references, item => {\n      let id = this.getSelectionId(item.reference)\n      document.getElementById(id).classList.add('selectable');\n    })\n    Notification['info']({title:'References inserted'})\n  }\n\n  alignText(){\n    if(_.isUndefined(this.textAligned)){\n      this.textAligned = true\n    }\n    else {\n      return\n    }\n\n    const itaP = document.querySelectorAll('#ita p');\n    _.forEach(document.querySelectorAll('#eng p'), ( val, key ) => {\n      if(!_.isUndefined(itaP[key])) {\n        itaP[key].style.position = 'absolute';\n        itaP[key].style.top = val.offsetTop+'px';\n      }\n    })\n\n    Notification['info']({title:'Text ready!'})\n  }\n\n  getReferences(){\n    const { referencesList } = this.props;\n    return _.sortBy(referencesList[this.state.postEng], ['name']); // sort necessario dato che alcune\n                                                                   // volte l'ordine tra gli audio attribuiti\n                                                                   // non è crescente.\n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    const references = this.getReferences()\n    //this.oldSelected = this.state.selected;\n    if( !_.isEmpty(references) && !tooEarly(1000) ) {\n      _.delay(this.insertReferencesIntoText.bind(this), 1500, references)\n      _.delay(this.alignText.bind(this), 1500)\n    }\n\n    if(this.state.play) {\n      this.play();\n      this.setState({play:false})\n    }\n  }\n\n  updateSelection(current){\n    if(this.state.selected !== '') {\n      document.getElementById(this.state.selected).classList.remove('selected');\n    }\n    current.classList.add('selected');\n  }\n\n  onlyWord(word){\n    word = word.replace(/&nbsp;/g, '')\n    return word.replace(/[\".,\\/#!?$%\\^&\\*;:{}=\\-_`~()“”]/g,\"\") // '\n  }\n\n  handleSelect(e){\n    let current = e.currentTarget;\n    this.selectedPiece = current.id;\n\n    if(current.classList.contains('selectable')) {\n      this.updateSelection(current);\n      const reference = `${this.state.postEng}-${current.id}`;\n      this.setState({\n        selected: current.id, \n        selectedReference: reference\n      });\n\n      if(this.state.playOnClick) {\n        this.setState({play:true})\n      }\n    }\n\n    // Select word for dictionary's definitions \n    const word = this.onlyWord(current.innerHTML);\n    if( !this.state.playOnClick ) {\n      Notification['info']({title: 'Word selected for dictionary', description:word});\n    }\n    this.setState({\n      wordSelected: word\n    });\n  }\n\n  play(index=0, onEnd=null) {\n    const { selected, selectedReference } = this.state;\n    const references = this.getReferences()\n\n    if(_.isEmpty(selectedReference)) {\n      Notification['info']({'placement': 'topStart', title:'Need selection first'});\n      return\n    }\n\n    let ref = null;\n    if( index === 0 ) {\n      ref = _.find( references, ( item ) => item.reference === selectedReference );\n    }\n    else {\n      this.playIndex = index;\n      ref = references[index];\n      const selectionId = this.getSelectionId(ref.reference)\n      this.updateSelection(document.getElementById(selectionId))\n      this.setState({\n        selectedReference: ref.reference,\n        selected: selectionId\n      });      \n    }\n\n    let audio = new Howl({\n      src:ref.source,\n      autoplay: true,\n      preload: true\n    })\n\n    audio.on('end', onEnd);\n  }\n\n  playAll() {\n    this.setState({stopPlay: false});\n\n    let index = 0;\n    const handleEnd = () => {      \n      const { selectedReference, stopPlay } = this.state;\n      const references = this.getReferences()\n\n      if( stopPlay ) {\n        return\n      }\n\n      if( index === 0) {\n        index = _.findIndex( references, (item) =>  item.reference === selectedReference)\n      }\n\n      // Skip duplicati\n      // Da evitare in fase di inserimento: TODO\n      while(\n        !_.isUndefined(references[index+1]) && \n        references[index+1].name == references[index].name) {\n        \n        ++index;\n        if(_.isUndefined(references[index+1])) break;\n      }\n      \n      if( !_.isUndefined(references[index+1])) {\n        this.play(++index, handleEnd)\n      }\n      else {\n        Notification['info']({title: 'End of Chapter'})\n      }\n    }\n\n    this.play(0, handleEnd.bind(this));\n  }\n\n  trigger(action){\n    this.setState({action: action})\n    setTimeout(()=> this.setState({action: '' }), 100)\n  }\n\n\n  hideTraduction(){\n    this.setState({showTraduction: false})\n  }\n\n  render(){\n\n    const postEng = this.props.posts.find( post => post.id === Number(this.state.postEng) )\n    const postIta = this.props.posts.find( post => post.id === Number(this.state.postIta) )\n\n    const { selected, action, playOnClick, wordSelected, showTraduction } = this.state;\n\n    if(!_.isNil(postEng) && !_.isNil(postIta)) {\n      //Notification['info']({title:'render'})\n      let engContent = null;\n      let content = postEng.content.rendered.split('<p>')\n      content = _.filter(content, data => !_.isEmpty(_.replace(data, /\\n/, '')) )\n      content = _.map( content, data => _.replace(data, '</p>', ''))\n      let counter = 0;\n      content = _.map(content, data => {\n        counter++;\n        return <p key={counter}><Selectors selected={selected} counter={counter} handleSelect={this.handleSelect} data={data}/></p>\n      })\n\n      let itaContent = postIta.content.rendered;\n\n      return (\n        <StickyContainer>\n        <FlexboxGrid>\n          <FlexboxGrid.Item  componentClass={Col} xs={24} sm={24} lg={24} xl={24}>\n            <Sticky>\n              { ({style}) => \n              <Panel className='player' style={style}>\n                <ButtonToolbar style={{display:'flex', alignItems:'center'}}>\n                  <IconButton \n                    disabled={playOnClick ? true : false}\n                    color='blue'\n                    onClick={ () => this.play() }\n                    icon={<Icon icon='arrow-right'/> }\n                  >Play\n                  </IconButton>\n\n                  <Toggle \n                    size='lg'\n                    checkedChildren='Play on click' \n                    unCheckedChildren='Select word'\n                    checked={playOnClick}\n                    onChange={(checked) => this.setState({playOnClick:checked})}\n                  />\n                  <Divider vertical/>\n\n                  <Button \n                    color='blue'\n                    onClick={ this.playAll }>Play All</Button>\n                  <Button \n                    color='violet'\n                    onClick={ () => this.setState({stopPlay: true}) }>Stop</Button>\n                  <Divider vertical/>\n                  \n                  <Button \n                    color='green'\n                    onClick={ () => this.setState({showTraduction:true}) }>\n                    Dictionary { wordSelected ? `for \"${wordSelected}\"` : null }\n                  </Button>\n\n                  {/*<Button onClick={ () => this.trigger('insert') }>Insert</Button>*/}\n                </ButtonToolbar>\n              </Panel>\n              }\n            </Sticky>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item id='eng' className='text-container eng' componentClass={Col} xs={12} sm={12} lg={12} xl={12}>\n            <h2 dangerouslySetInnerHTML={{__html: postEng.title.rendered}}></h2>\n            <Panel>\n              {content}\n            </Panel>\n          </FlexboxGrid.Item>\n          <FlexboxGrid.Item id='ita' className='text-container ita' componentClass={Col} xs={12} sm={12} lg={12} xl={12}>\n            <h2 dangerouslySetInnerHTML={{__html: postIta.title.rendered}}></h2>\n            <Panel>\n              <div dangerouslySetInnerHTML={{__html: itaContent}}/>\n            </Panel>\n          </FlexboxGrid.Item>\n          <Dictionary\n            word={wordSelected}\n            show={showTraduction}\n            close={ this.hideTraduction }\n          />\n        </FlexboxGrid>\n        </StickyContainer>\n      )\n    }\n    else {\n      return <div></div>;\n    }\n  }\n\n}\n\nclass Audio extends React.Component {\n  render(){\n    const { itemId, source } = this.props;\n    return (\n      <audio controls id={itemId}>\n        <source src={source} type=\"audio/mpeg\"></source>\n      </audio>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return Object.assign({}, {dispatch})\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: getPosts(state.reader),\n    referencesList: getReferences(state.reader),\n    fetching: isFetching(state.reader)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reader);\n\n\n/* for debounce */\nlet lastcall;\nfunction tooEarly(ms=100){\n    lastcall = lastcall || Date.now();\n    const now = Date.now();\n    if(lastcall < now-ms ) {\n      lastcall = now;\n      return true\n    }\n    else { \n      return false\n    }\n  }","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, HashRouter , Route, Switch } from 'react-router-dom';\n// Per utilizzare il router senza hash ( vedi google per differenza ) utilizzare\n// BrowserRouter as Router\n// L'HashRouter evita che la richiesta venga inoltrata backend.. come diff\nimport store from './configureStore';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './views/Home';\n// import Product from './views/Product';\n//import Products from './views/Products';\n//import Categories from './views/Categories';\n//import Cart from './views/Cart';\nimport Editor from './views/Editor';\nimport Reader from './views/Reader';\n\n\n/*\nimport Product from './views/Product';\nimport Search from './views/Search';\n\n*/\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/editor/:post\" component={Editor} />\n            <Route path=\"/reader/:postEng/:postIta\" render={ props => <Reader {...props} key={Date.now()}/> } />\n                                                                      {/* For re-mount component when route change */}\n          </Switch>\n        </App>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nfunction Login(){\n\n}\n\n"],"sourceRoot":""}